fastlane_version "2.44.1"

default_platform :ios

xcversion(version: "8.2.1") # Selects Xcode 8.2.1

platform :ios do
  #
  # Learn more here: https://docs.fastlane.tools/getting-started/ios/beta-deployment/
  #             and: https://docs.fastlane.tools/getting-started/android/beta-deployment/
  #
  lane :beta do |values|

    # Ensure that your git status is not dirty

    # Fabric generated this lane for deployment to Crashlytics Beta
    # set 'export_method' to 'ad-hoc' if your Crashlytics Beta distribution uses ad-hoc provisioning
    gym(scheme: 'MaidMe-Dev', export_method: 'ad-hoc', clean: true)

    emails = values[:test_email] ? values[:test_email] : ['thaer.abbas@maidme.ae', 'kareem@maidme.ae'] # You can list more emails here
    groups = values[:test_email] ? nil : nil # You can define groups on the web and reference them here

    crashlytics(api_token: '8b7f0acd527804787470f677d1f1c0e36e9aeda1',
             build_secret: '6e920e9a388a8fed05af7c40b7dd3093f7688f23a85fa7c1f21ffe11bfe1e5e6',
                   emails: emails,
                   groups: groups,
                    notes: 'Distributed with fastlane', # Check out the changelog_from_git_commits action
             notifications: true,
                    debug: true) # Should this distribution notify your testers via email?

    # for all available options run `fastlane action crashlytics`

    # You can notify your team in chat that a beta build has been uploaded
    # slack(
    #   slack_url: "https://hooks.slack.com/services/YOUR/TEAM/INFO"
    #   channel: "beta-releases",
    #   message: "Successfully uploaded a beta release - see it at https://fabric.io/_/beta"
    # )
  end

  lane :testflight do |values|
    
    # Ensure that your git status is not dirty
    ensure_git_status_clean

    # Increment the build number (not the version number)
    # Providing the xcodeproj is optional
    increment_build_number(
      xcodeproj: "Maidme.xcodeproj"
    )
    # Fabric generated this lane for deployment to Crashlytics Beta
    # set 'export_method' to 'ad-hoc' if your Crashlytics Beta distribution uses ad-hoc provisioning
    gym(scheme: 'MaidMe', export_method: 'app-store')

    pilot(
      username: 'maidmeapp@gmail.com'
    )

    # Commit the version bump
    commit_version_bump(xcodeproj: "Maidme.xcodeproj")

    # Add a git tag for this build. This will automatically
    # use an appropriate git tag name
    add_git_tag

    # Push the new commit and tag back to your git remote
    push_to_git_remote

    # You can notify your team in chat that a beta build has been uploaded
    # slack(
    #   slack_url: "https://hooks.slack.com/services/YOUR/TEAM/INFO"
    #   channel: "beta-releases",
    #   message: "Successfully uploaded a beta release - see it at https://fabric.io/_/beta"
    # )
  end
  
end
